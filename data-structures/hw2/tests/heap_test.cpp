#include <iostream>
#include "../Heap.h"


int heap_test() {
    int data[50] = {0};
    int keys[50] = {504, 1000, 1791, 1015, 1345, 1904, 787, 1960, 1606, 383, 756, 422, 808, 1216, 92, 570, 1377,
                    760, 1856, 100, 1764, 1539, 863, 1177, 2276, 820, 1771, 2306, 2244, 415, 403, 885, 1924, 296,
                    1533, 2284, 736, 2414, 1716, 1660, 1925, 1537, 2335, 1917, 2302, 2078, 353, 1657, 584, 1261};
    int sorted[45] = {5, 50, 92, 100, 296, 353, 383, 415, 422, 500, 504, 584, 736, 760, 787, 808, 863, 885, 1000,
                      1015, 1177, 1216, 1261, 1345, 1377, 1533, 1537, 1539, 1606, 1657, 1660, 1716, 1771, 1791,
                      1856, 1904, 1917, 1924, 1960, 2244, 2276, 2302, 2306, 2335, 2414};
    int keys2[50] = {1113, 966, 680, 2255, 923, 362, 581, 2154, 662, 503, 1410, 645, 487, 239, 2456, 429, 321, 1468,
                     1200, 1926, 856, 112, 1944, 356, 557, 2122, 190, 2317, 2025, 326, 928, 1681, 2327, 2420, 1120,
                     688, 817, 529, 312, 2058, 2182, 2140, 1709, 22, 1384, 2040, 2415, 1275, 2488, 1806};
    int sorted2[45] = {5, 22, 50, 112, 190, 239, 312, 321, 326, 356, 362, 487, 500, 503, 529, 557, 581, 645, 662,
                       680, 817, 923, 966, 1113, 1120, 1200, 1275, 1384, 1468, 1681, 1709, 1806, 1926, 1944, 2025,
                       2058, 2140, 2154, 2255, 2317, 2327, 2415, 2420, 2456, 2488};
    int keys3[50] = {742, 77, 103, 2317, 2058, 1539, 1573, 1664, 507, 994, 1622, 732, 739, 2130, 2087, 2094, 1663,
                     2204, 1301, 1529, 1367, 948, 60, 470, 1435, 1019, 2013, 132, 1153, 1551, 1114, 1525, 870, 1685,
                     2242, 817, 2452, 710, 1804, 1602, 134, 2001, 104, 1140, 2038, 1841, 1001, 1928, 550, 547};
    int sorted3[45] = {5, 50, 60, 77, 103, 104, 132, 470, 500, 507, 547, 550, 710, 732, 739, 742, 870, 948, 994, 1001,
                       1140, 1153, 1301, 1435, 1525, 1529, 1539, 1551, 1573, 1602, 1663, 1664, 1685, 1804, 1928, 2001,
                       2013, 2038, 2058, 2087, 2130, 2204, 2242, 2317, 2452};
    int keys4[50] = {1845, 591, 836, 2355, 76, 81, 1886, 907, 1022, 507, 2353, 429, 2286, 1344, 239, 1212, 2276, 960,
                     46, 2407, 1753, 1686, 940, 394, 680, 2400, 368, 1493, 2103, 365, 1294, 817, 415, 936, 2141, 673,
                     617, 1566, 793, 1758, 302, 1447, 501, 71, 299, 227, 1657, 1717, 1406, 2029};
    int sorted4[45] = {5, 46, 50, 71, 76, 81, 239, 299, 365, 368, 394, 415, 429, 500, 501, 507, 591, 617, 680, 793,
                       817, 836, 907, 936, 940, 960, 1022, 1344, 1406, 1447, 1493, 1566, 1657, 1686, 1717, 1758, 1845,
                       1886, 2029, 2103, 2141, 2276, 2286, 2355, 2407};
    int keys5[50] = {1115, 1373, 2412, 88, 1054, 2244, 961, 2264, 756, 808, 415, 2465, 337, 791, 2402, 497, 562, 1646,
                     1607, 1780, 1068, 2159, 1178, 385, 2088, 2419, 619, 1461, 1070, 1831, 607, 1767, 1200, 2118, 1718,
                     855, 2158, 2131, 1134, 2038, 2309, 2067, 1055, 589, 2218, 603, 2139, 349, 1010, 1111};
    int sorted5[45] = {5, 50, 88, 337, 349, 385, 500, 562, 589, 619, 756, 791, 808, 961, 1010, 1054, 1055, 1070, 1111,
                       1115, 1134, 1178, 1200, 1373, 1461, 1607, 1646, 1718, 1767, 1780, 1831, 2038, 2067, 2088, 2118,
                       2131, 2139, 2158, 2159, 2218, 2244, 2264, 2402, 2412, 2465};
    int keys6[50] = {1053, 50, 1918, 762, 155, 2330, 2471, 2240, 369, 936, 1873, 2362, 507, 1214, 716, 734, 2258, 928,
                     1249, 578, 126, 566, 2114, 882, 2360, 2078, 1521, 1365, 1564, 1685, 11, 2005, 1483, 244, 2477,
                     1870, 1654, 2109, 670, 1451, 864, 1820, 2253, 362, 599, 1325, 1467, 1453, 1000, 2465};
    int sorted6[45] = {5, 50, 50, 155, 244, 362, 369, 500, 507, 566, 578, 599, 670, 716, 762, 882, 928, 936, 1000,
                       1053, 1214, 1249, 1365, 1451, 1453, 1467, 1483, 1521, 1564, 1654, 1685, 1820, 1918, 2005, 2109,
                       2114, 2240, 2253, 2258, 2330, 2360, 2362, 2465, 2471, 2477};
    int *keys_list[5] = {keys2, keys3, keys4, keys5, keys6};
    int *sorted_list[5] = {sorted2, sorted3, sorted4, sorted5, sorted6};
    HeapNode<int, int> **nodes = new HeapNode<int, int>*[50];
    Heap<int, int> h = Heap<int, int>(50, -1);
    h.makeHeap(nodes, data, keys);
    h.remove(nodes[10]);
    h.remove(nodes[15]);
    h.remove(nodes[20]);
    h.remove(nodes[25]);
    h.insert(0, 5);
    HeapNode<int, int>* a = h.insert(0, 10);
    h.insert(0, 50);
    HeapNode<int, int>* b = h.insert(0, 100);
    h.insert(0, 500);
    HeapNode<int, int>* c = h.insert(0, 1000);
    h.remove(nodes[30]);
    h.remove(a);
    h.remove(nodes[35]);
    h.remove(b);
    h.remove(nodes[40]);
    h.remove(c);
    h.remove(nodes[45]);

    int result[45];
    for(int i = 0; i < 45; i++){
        HeapNode<int, int> *min = h.getMin();
        result[i] = min -> getKey();
        h.remove(min);
    }
    for(int i = 0; i < 45; i++){
        assert(sorted[i] == result[i]);
    }
    assert(!h.getMin());
    std::cout << "test 1 passed" << std::endl;

    for(int j = 0; j < 5; j++) {
        for (int i = 0; i < 50; i++) nodes[i] = h.insert(0, keys_list[j][i]);
        h.remove(nodes[10]);
        h.remove(nodes[15]);
        h.remove(nodes[20]);
        h.remove(nodes[25]);
        h.insert(0, 5);
        a = h.insert(0, 10);
        h.insert(0, 50);
        b = h.insert(0, 100);
        h.insert(0, 500);
        c = h.insert(0, 1000);
        h.remove(nodes[30]);
        h.remove(a);
        h.remove(nodes[35]);
        h.remove(b);
        h.remove(nodes[40]);
        h.remove(c);
        h.remove(nodes[45]);

        for (int i = 0; i < 45; i++) {
            HeapNode<int, int> *min = h.getMin();
            result[i] = min -> getKey();
            h.remove(min);
        }
        for (int i = 0; i < 45; i++) {
            assert(sorted_list[j][i] == result[i]);
        }
        assert(!h.getMin());
        std::cout << "test " << j + 2 << " passed" << std::endl;
    }
    delete[] nodes;
    return 0;
}